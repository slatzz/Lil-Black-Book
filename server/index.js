/////////////////////////////// CODE BEGINS HERE ///////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////// SET UP ///////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
require ('dotenv').config();
const { sequelize, Queries, Favorites }  = require('./db')
const express = require('express');
const path = require('path'); 
const { Sequelize } = require('sequelize');
const app = express();
const { PORT, API_KEY } = process.env;
// const api = 'https://api.yelp.com/v3/businesses/search';
const DIR = path.join(__dirname, '../build');
const HTML_FILE = path.join(DIR, 'index.html');
app.use(express.static(DIR));
const bodyParser = require('body-parser');
app.use(express.json());
// app.use(bodyParser.urlencoded({extended:true}));

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////// CRUD ////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
app.get('/', (req, res) => {
    res.sendFile(HTML_FILE);
})
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// READ //////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
app.get('/dictionary', (req, res) => {
    Queries.findAll({})
      .then(word => {
        console.log('Found word!')
        res.status(200).send(word);
      })
      .catch(err => { res.status(500).send('Could not find word')})
  });
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// CREATE ////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
app.post('/dictionary', (req, res) => {
    const { word } = req.body;
    // console.log('post', word);
    Queries.create( { word } )
        .then(word => {
            console.log("Word added to DB!")
            res.status(201).send(word)
        })
        .catch( err => {
            console.log('not saving word')
            res.status(500).send(err)
        })
})
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// UPDATE ////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
// app.put('/dictionary', (req, res) => {
//     // console.log('Hello')
//     let { word } = req.body;
//     // console.log('put', word)
//     Queries.update({ rating: 1})
//     .then(query => {
//       if(query){
//         query.update(rating)
//           .then( () => {
//             res.sendStatus(200)
//           })
//         }
//     })
//     .catch( err => {
//         res.status(500).send(err)
//     })
//   })

app.put('/dictionary/:rating', (req, res) => {
    let { rating } = req.body
        // console.log('~~~>', result[0])
        Queries.update({ rating: rating }, { where: { rating: null }})
            .then( () => { res.send('Rating changed!')})
            .catch( err => { console.log('You have already rated this word, chillax bruhhh')})
 })

// app.put('/dictionary', (req, res) => {
//     let { rating } = req.body
//     Queries.update({ definition: 'UPDATE' })
//     .then(result => {
//         console.log('*****', result[0])
//     })
//     .catch( err => { console.log('You have already rated this word, chillax bruhhh')})
    
//         })
////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// DELETE ////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
app.delete('/dictionary/:word', (req, res) => {
    let { word } = req.body
    // console.log('??', req.query)
    // Queries.findAll({})
    // .then( theWord => {
        // console.log('result', result[0])
        Queries.destroy({
        where: { word: {word}}
        })
    // })
    .then( () => {
        res.send(`${{word}} deleted!`)
    })
    .catch( err => { console.log('Could not remove')})
})

////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// PORT //////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
app.listen(PORT, () => {
	console.info(`Da LIL BLACK BOOK is listening on ${PORT}`)
})
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////CODE ENDS HERE /////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////